@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Microsoft.EntityFrameworkCore.Infrastructure
@using Namotion.Reflection
@using Mario_Vukovic_Seminar.Models.Dbo
@using Mario_Vukovic_Seminar.Services.Interface
@inject RoleManager<IdentityRole> roleManager
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IUserService UserService
@{
    var user = await UserManager.GetUserAsync(User);
}

<ul class="navbar-nav">
    @if (user != null)
    {
        var userRole = await UserManager.GetRolesAsync(user);

        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @user.FirstName</a>
        </li>

        @switch (userRole[0])
        {
            case "Admin":
            case "Editor":
                <li class="nav-item">
                    <a class="nav-link text-dark" href="@Url.Action("AdminPanel", "Admin")">Admin panel</a>
                </li>
                break;
            case "BasicUser":
            case "Employee":
                break;
        }

        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" href="@Url.Action("Register", "User")">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
